version: 2.1

orbs:
  ggshield: gitguardian/ggshield@volatile
  browser-tools: circleci/browser-tools@1.4.0

jobs:
  build:
    environment:
      SENTRY_ORG: nick-brett
      SENTRY_PROJECT: bem-backend
      SENTRY_ENVIRONMENT: production
      SENTRY_RELEASE: << pipeline.git.revision >>
      LHCI_GITHUB_APP_TOKEN: ${{ secrets.LHCI_GITHUB_APP_TOKEN }}
    docker:
      - image: cimg/node:18.8.0-browsers
    steps:
      - browser-tools/install-chrome
      - browser-tools/install-chromedriver
      - checkout
      - restore_cache:
          name: Restore node_modules and next cache
          keys:
            # when lock file changes, use increasingly general patterns to restore cache
            - node-v6-{{ .Branch }}-{{ checksum "webapp/package-lock.json" }}
            - node-v6-{{ .Branch }}-
            - node-v6-
      - run:
          name: Install modules
          command: |
            cd webapp && npm install
      - run:
          name: Build app
          command: |
            cd webapp && npm run build
      - save_cache:
          name: Update node_modules cache
          paths:
            - webapp/node_modules
            - webapp/.next/cache
          key: node-v6-{{ .Branch }}-{{ checksum "webapp/package-lock.json" }}
      - run:
          name: Run tests
          command: |
            cd webapp && npm run test-staging
          environment:
            JEST_JUNIT_OUTPUT_DIR: ./reports/
      - store_test_results:
          path: ./webapp/reports/

      - run:
          name: Run Lighthouse checks
          command: |
            cd webapp && sudo npm install -g @lhci/cli@0.9.x
            npm run lighthouse-staging
      - run:
          name: Export site
          command: |
            cd webapp && npm run export
      - run:
          name: Create release and send sourcemaps to Sentry
          command: |
            cd webapp
            npm run wrangler-sourcemaps
            curl -sL https://sentry.io/get-cli/ | bash
            sentry-cli releases new -p $SENTRY_PROJECT $SENTRY_RELEASE
            sentry-cli releases set-commits --auto $SENTRY_RELEASE 
            sentry-cli releases files $SENTRY_RELEASE upload-sourcemaps --ext map --ext js ./out/worker --url-prefix '/'
            sentry-cli releases finalize $SENTRY_RELEASE
            sentry-cli releases deploys $SENTRY_RELEASE new -e $SENTRY_ENVIRONMENT
      - run:
          name: Deploying to Cloudflare
          command: |
            cd webapp && npm run deploy

workflows:
  build_and_test:
    jobs:
      - ggshield/scan:
          name: ggshield-scan
          base_revision: << pipeline.git.base_revision >>
          revision: <<pipeline.git.revision>>
      - build:
          requires:
            - ggshield-scan
