version: 2.1

orbs:
  browser-tools: circleci/browser-tools@1.4.0

jobs:
  build:
    environment:
      SENTRY_ORG: nick-brett
      SENTRY_PROJECT: bem-backend
      SENTRY_ENVIRONMENT: production
    docker:
      - image: cimg/node:18.8.0-browsers
    steps:
      - browser-tools/install-chrome
      - browser-tools/install-chromedriver
      - checkout
      - restore_cache:
          name: Restore node_modules and next cache
          keys:
            # when lock file changes, use increasingly general patterns to restore cache
            - node-v6-{{ .Branch }}-{{ checksum "webapp/package-lock.json" }}
            - node-v6-{{ .Branch }}-
            - node-v6-
      - run:
          name: Install modules
          command: |
            cd webapp && npm install
      - run:
          name: Build app and export
          command: |
            cd webapp && npm run build && npm run export
      - save_cache:
          name: Update node_modules cache
          paths:
            - webapp/node_modules
            - webapp/.next/cache
          key: node-v6-{{ .Branch }}-{{ checksum "webapp/package-lock.json" }}
      - run:
          name: Run Lighthouse checks
          command: |
            cd webapp && sudo npm install -g @lhci/cli@0.9.x && lhci autorun --throttling.cpuSlowdownMultiplier=2.4
      - run:
          name: Create release and notify Sentry of worker deploy
          command: |
            curl -sL https://sentry.io/get-cli/ | bash
            export SENTRY_RELEASE=$(sentry-cli releases propose-version)
            cd webapp 
            mv ./workers/out/_worker-bundle.js.map ./workers/out/worker.mjs.map
            sentry-cli releases new -p $SENTRY_PROJECT $SENTRY_RELEASE
            sentry-cli releases set-commits $SENTRY_RELEASE --auto
            sentry-cli releases files $SENTRY_RELEASE upload-sourcemaps ./workers/out --url-prefix '/'
            sentry-cli releases finalize $SENTRY_RELEASE
            sentry-cli releases deploys $SENTRY_RELEASE new -e $SENTRY_ENVIRONMENT
      - run:
          name: Deploying to Cloudflare
          command: cd webapp && npx wrangler pages publish out --project-name=bem
